"use strict";/*
 * NOTICE OF LICENSE
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * @author     Tobias Walter <tw@xport.de>, Rico Dang <rd@xport.de>
 * @copyright  2017 - 2018 Tobias Walter, Rico Dang
 * @version    0.2.0 beta
 * @date       18/03/2018
 */
!function(t){t.fn.extend({JensParallax:function(a){return this.each(function(){new t.JensParallax(this,a)})}}),t.JensParallax=function(a,i){this.jens=t(a),this.options=i,this.opts=t.extend({},this.DEFAULT_OPTS,this.options),this.elemIndex=this.jens.index(),this.init()},t.JensParallax.prototype={JENS_STAGE_CLASS:"jensParallax",IMAGE_CLASS:"parallaxImage",DEFAULT_OPTS:{height:null},init:function(){var a=this;this.jens.addClass(this.JENS_STAGE_CLASS),this.prepareParallax(),t(document).ready(function(){a.parallax()}),t(window).on({scroll:function(){a.parallax()},load:function(){setTimeout(function(){return a.parallax()},50)},resize:function(){a.parallax()}})},prepareParallax:function(){var t=this.jens.find("."+this.IMAGE_CLASS);this.jens.css({height:this.opts.height}),t.width()>t.parent().width()?t.css({left:"50%","margin-left":"-"+t.width()/2+"px"}):t.css({left:"0%","margin-left":"0px"})},parallax:function(){var a=this;this.jens.each(function(){t(this).find("."+a.IMAGE_CLASS).css({position:"absolute",bottom:"-"+a.parallaxCalc(t(this))+"px"})})},parallaxCalc:function(a){var i=a.offset().top,n=a.height(),s=t(window).height(),e=t(window).scrollTop();if(i<e+s&&i+n>e){var l=Math.abs((i-(e+s))/(n+s)*100);return Math.abs(l/100*(a.find("."+this.IMAGE_CLASS).height()-n))}return 0}}}(jQuery);